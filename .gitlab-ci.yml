stages:
  - build
  - test
  - deploy

variables:
  NODE_ENV: development # Ensure both dependencies and devDependencies are installed

cache:
  paths:
    - web-app/client/node_modules/

# Build the React frontend
build:
  stage: build
  image: node:20.12.2
  script:
    - echo "Building React frontend..."
    - cd web-app/client
    - npm ci # Clean install dependencies
    - npm run build # Generate production build
  artifacts:
    paths:
      - web-app/client/dist # Save the dist folder
    expire_in: 1 week # Artifacts will be available for a week

# Run Tests
test:
  stage: test
  image: node:20.12.2
  script:
    - echo "Running tests..."
    - cd web-app/client
    - npm ci # Clean install dependencies for tests
    - npm run test
  dependencies:
    - build # Ensure the test stage uses the dist folder from the build stage

# Deploy to Vercel
deploy:
  stage: deploy
  image: node:20.12.2
  script:
    - echo "Deploying React frontend to Vercel..."
    - cd web-app/client
    - ls -l dist # Debug: Ensure the dist folder exists
    - npm install -g vercel # Install Vercel CLI globally
    - npx vercel ./dist --prod --token=$VERCEL_TOKEN # Deploy the dist folder
  dependencies:
    - build # Ensure deploy has access to the dist folder from the build stage
  only:
    - main # Only deploy from the main branch
